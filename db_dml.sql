-- DML
-- Покажете имената на продуктите за които има доставки:

SELECT DISTINCT name FROM Products -- Избираме уникалните имена от таблицата 'Продукти'
JOIN Delivery_products -- Свързваме таблицата 'Продукти' и 'Доставки_Продукти'
ON Products.id_products = Delivery_products.id_products -- Свързваме таблиците посредством първичен/външен ключ

-- Изведете всички ястия от група „Супа“:
SELECT group_meals, name FROM Meals -- Избираме групата ястие и името на ястието от таблицата 'Ястия'
WHERE group_meals = 'супа' -- Където групата на ястието е 'супа'

-- Изведете имената и градовете на всички доставчици които не са от Варна:
SELECT name, city FROM Suppliers -- Избираме име и град от таблицата 'Доставчици'
WHERE city != 'Варна' -- За всички доставчици от град Варна

-- Добавете ново ястие с име „Мусака“ от група „Основно ястие“:
INSERT INTO Meals(group_meals, name, price, quantity) -- Добави група ястие, име на ястие, цена на ястие и приготвен брой ястия в таблицата 'Ястия'
VALUES ('Основно ястие', 'Мусака', 2.20, 80) -- Със съответните стойности

-- Изведете номер на доставката и име на доставчик за доставки които са извършени през миналия месец:
SELECT id_delivery, Suppliers.name FROM Delivery -- Показваме номер на доставка и името на доставчик
JOIN Suppliers -- Свързваме таблиците 'Доставки' и 'Доставчици'
ON Delivery.id_suppliers = Suppliers.id_suppliers -- Използваме номер на доставчик като идентификатор за връзка 
WHERE datediff(month,date_of_delivery,getdate())=1 -- Където датата на доставка е от предния месец

-- Поради допусната грешка, променете датата на транспортиране на храната, като при тези при които годината на доставяне на храна е 30 Април 2016 година, да се промени към дата 29 Април 2016 година.
UPDATE Queries -- Обновяваме таблицата 'Заявки за обслужване'
SET date_of_transport = '2016-04-29' -- Задаваме датата на транспорт да бъде 29 Април 2016 г.
WHERE date_of_transport = '2016-04-30' -- Където датата на транспорт е 30 Април 2016 г.

-- Покажете броя на ястията, които се предлагат по определена група ястия:
SELECT DISTINCT group_meals, COUNT (id_meals) as Count_meals FROM Meals -- Показваме групата на ястията и брой различни ястия от съответната група от таблицата 'Ястия'
GROUP BY group_meals -- Групираме по група ястия

-- Изведете името и фамилията на служителите, които са между 40 и 50 години.
SELECT first_name, last_name FROM Employees -- Показване на името и фамилията на служителите от таблицата 'Служители'
WHERE years BETWEEN 40 AND 50 -- За които тяхната възраст е между 40 и 50 години.

--Покажете името и фамилията на служителя, както и неговата длъжност, ако използва електронна поща в Mail.bg и заеманата длъжност да е хигиенист.
SELECT DISTINCT first_name, last_name, Positions.name AS Position FROM Employees -- Покажете името, фамилия и работната позиция на служителя от таблицата 'Служители'
JOIN Positions -- Свързваме таблиците 'Длъжности' и 'Служители'
ON Positions.id_positions = Employees.id_positions -- Чрез номера на служителя
WHERE email LIKE '%@mail.bg' AND Positions.name = 'Хигиенист' -- Където в колоната email се съдържа стойност @mail.bg и името на длъжността е Хигиенист

-- Покажете имената на продуктите и пресметнете общото тегло (products_weight * quantity) на всеки продукт от склада. Изчисленото тегло също да се показва в таблицата. Подредете записите в обратна посока на азбучния ред (от Я до А).
SELECT name, SUM (products_weight * quantity) as Total_Weight FROM Products -- Показване на името на продукт, общото количество от продукт, съхранено в склада от таблицата 'Продукти'
GROUP BY id_products, name -- Групираме по номер на продукт и име на продукт
ORDER BY name DESC -- Подреждаме записите по име обратно по азбучен ред

-- Изведете имената на ястията и техните групи, ако за тях не е въведена дата на приготвяне.
SELECT name, group_meals FROM Meals -- Извеждане на име на ястие и неговата група от таблицата 'Ястия'
LEFT JOIN Making -- Вземат се всички редове от таблицата 'Приготвяне'
ON Meals.id_meals = Making.id_meals
WHERE Making.date_of_prepare IS NULL -- Където датата на приготвяне не е въведена

-- Изтрийте всички ястия, които съдържат в края на името си думата „яхния“
DELETE FROM Meals -- Изтриване на записи от таблицата 'Ястия'
WHERE name LIKE '%яхния' -- Където името на ястието завършва с думата 'яхния'

-- Покажете името и фамилията на клиентите, които имат заявка за обслужване.
SELECT DISTINCT first_name, last_name FROM Clients -- Показване на името и фамилията на клиентите
JOIN Queries -- Свързване на таблиците 'Клиенти' и 'Заявки за обслужване'
ON Clients.EGN_clients = Queries.EGN_clients;  -- Чрез ЕГН на клиента

-- Създайте нов изглед (View) и изведете данните след неговото изпълнение. Изгледа трябва да покаже имената и цените на ястията, които имат цени над средната цена за ястие.
GO

CREATE VIEW Meals_above_average_price AS -- Създаване на изглед с име 'Meals_above_average_price'
SELECT Meals.group_meals, name, price -- Който да показва групата на ястието, името на ястието и неговата цена
FROM Meals -- От таблицата 'Ястия'
WHERE price > (SELECT AVG(price) FROM Meals) -- Където цената на ястието е над средната цена

-- Резултат от използване на създаденото VIEW
GO

SELECT * FROM Meals_above_average_price -- Показване на резултата от създадения изглед






